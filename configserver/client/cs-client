#! /usr/bin/env python
import argparse
import os
import oauth2 as oauth

from xml.etree import ElementTree as ET
from optparse import OptionParser

CS_API_VER = 1

def add_endpoint(fn):
    def wrapper(self, url, **kwargs):
        url = self.cs_endpoint + url
        return fn(self, url, **kwargs)
    return wrapper

class CSClient(object):
    '''
    Description:
        Client interface to Config Server (CS)
    '''

    def __init__(self, endpoint, oauth_key, oauth_secret, **kwargs):
        self.version = CS_API_VER
        self.cs_endpoint = endpoint
        self.cs_oauth_key = oauth_key
        self.cs_oauth_secret = oauth_secret

        # create an oauth client for communication with the cs
        consumer = oauth.Consumer(self.cs_oauth_key, self.cs_oauth_secret)
        # 2 legged auth, token unnessesary
        token = None #oauth.Token('access-key-here','access-key-secret-here')
        client = oauth.Client(consumer, token)
        self.http = client

    def get(self, url, headers=None):
        '''
        Issue the http get to the the Config Server.
        '''
        return self.http.request(url, method='GET', headers=headers)

    def put(self, url, body=None, headers=None):
        '''
        Issue the http put to the the Config Server.
        '''
        return self.http.request(url, method='PUT',
                            body=body, headers=headers)
    @add_endpoint
    def post(self, url, body=None, headers=None):
        '''
        Issue the http put to the the Config Server.
        '''
        return self.http.request(url, method='POST',
                            body=body, headers=headers)

def main():
    parser = argparse.ArgumentParser(description='Audrey Start')
    parser.add_argument('-e', '--endpoint', dest='endpoint', \
        required=True, help='Config Server endpoint url')
    parser.add_argument('-k', '--key', dest='oauth_key', \
        required=True, help='oAuth Key')
    parser.add_argument('-s', '--secret', dest='oauth_secret', \
        required=True, help='oAuth Secret')
    parser.add_argument('xml_file', help='XML file to post')

    args = parser.parse_args()

    # ensure the conf it a dictionary, not a namespace
    if hasattr(args, '__dict__'):
       args = vars(args)

    cs_client = CSClient(**args)
    f = open(args['xml_file'], 'r')
    xml_body = f.read()
    f.close()

    xml_root = ET.XML(xml_body)
    uuid = xml_root.attrib['id']
    response, body = cs_client.post('/configs/%s/%s' % (CS_API_VER, uuid),
                   body=("data=%s" % xml_body))
    print "HTTP Status: %s" % response['status']

if __name__ == '__main__':
    main()
